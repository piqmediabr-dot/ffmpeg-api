# Cloud Build: builda a imagem, envia para o Artifact Registry e faz deploy no Cloud Run.
# Substituições (configure no Trigger ou deixe esses defaults):
# _REGION: região do Cloud Run/Artifact Registry (ex: us-central1)
# _SERVICE: nome do serviço Cloud Run (ex: ffmpeg-api)
# _REPO: nome do repositório de imagens no Artifact Registry (ex: ffmpeg-api)
# PROJECT_ID: injetado automaticamente pelo Cloud Build
substitutions:
  _REGION: us-central1
  _SERVICE: ffmpeg-api
  _REPO: ffmpeg-api

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

steps:
  # 1) Build da imagem Docker
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/${_SERVICE}:$SHORT_SHA'
      - '.'

  # 2) Push pro Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/${_SERVICE}:$SHORT_SHA'

  # 3) Deploy no Cloud Run usando o service.yaml
  # Passa a imagem via --image para sobrescrever o placeholder do YAML.
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy ${_SERVICE} \
          --project ${PROJECT_ID} \
          --region ${_REGION} \
          --allow-unauthenticated \
          --image ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/${_SERVICE}:$SHORT_SHA \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 5 \
          --timeout 3600 \
          --service-account ${_SERVICE}-sa@${PROJECT_ID}.iam.gserviceaccount.com \
          --update-secrets=SERVICE_ACCOUNT_JSON=SERVICE_ACCOUNT_JSON:latest

images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/${_SERVICE}:$SHORT_SHA'
